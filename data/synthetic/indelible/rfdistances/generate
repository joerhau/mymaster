#!/bin/bash

#indelible model names
modelsI=(Dayhoff Dayhoff-dcmut JTT mtREV WAG rtREV cpREV Vt Blosum mtMAM LG HIVb HIVw JTT-dcmut)
# RAxML model names
modelsR=(DAYHOFF DCMUT JTT MTREV WAG RTREV CPREV VT BLOSUM62 MTMAM LG HIVB HIVW JTTDCMUT)
modelsRF=(DAYHOFFF DCMUTF JTTF MTREVF WAGF RTREVF CPREVF VTF BLOSUM62F MTMAMF LGF HIVBF HIVWF JTTDCMUTF)
nrModels=14
#length opf generated partitions
min=100
max=500
#end of test (2^1 ... 2^pow)
pow=7
#taxa
nrTaxa=50
#name of indelible control file
cFile="control.txt"
#part of the name of partition file
pFile=".part"
#tree file name
tFile="t1.tre"
#use specified tree out of control file
tree=`echo "$tFile" | cut -d'.' -f1`
#indelible programm call
indel="indelible"
NUM_CORES=4
raxmlHPC="raxmlHPC-PTHREADS -T "$NUM_CORES
raxmlLight="raxmlLight-PTHREADS -T "$NUM_CORES
seed=65498

#for number of partitions in 2^i generate control file and run indelible 
for i in `seq 1 $pow`
do
	n=$((2 ** $i))
	f=$tree-$n
	mkdir $n
	cp $cFile $n
	cd $n
	begin=0
	end=0
	
	touch $f$pFile
	touch "rand"$pFile
	cp "../"$tFile .
	cat "../"$tFile >> $cFile
	echo -e "\n\n[PARTITIONS] Pname" >> $cFile
	for j in `seq 0 $((n - 1))`
	do
		let "r=$RANDOM % $nrModels"
		let "r2=$RANDOM % $nrModels"
		let "l=$RANDOM % $((max-min))"
		l=$((l + min))
		end=$((begin+l))

		models[$j]=$r
		mI=${modelsI[${models[$j]}]}	
		mR=${modelsRF[${models[$j]}]}	
		mR2=${modelsRF[$r2]}	
		#append to indelible config file	
		echo " [$tree $mI $l]" >> $cFile
		#append to partition file
		echo "$mR, part$j = $begin-$end" >> $f$pFile
		echo "$mR2, part$j = $begin-$end" >> "rand"$pFile
		begin=$((end+1))
	done
	echo "[EVOLVE]     
  Pname  1  $f" >> $cFile
	
	$indel
	rm $f".fas"
	rm "trees.txt"
	rm $cFile
	mv "LOG.txt" "indelible.log"
	mv $f"_TRUE.phy" $f".phy"

	$raxmlHPC -y -s $f.phy -m PROTGAMMAWAGF -n start -p $seed
	$raxmlLight -t RAxML_parsimonyTree.start -s $f.phy -m PROTGAMMAWAGF -q $f$pFile -n S1
	$raxmlLight -t RAxML_parsimonyTree.start -s $f.phy -m PROTGAMMAWAGF -q rand$pFile -n S2

	cat RAxML_reult.S1 >> $tFile
	cat RAxML_reult.S2 >> $tFile

	#afterwards, compare the trees to each other, plus the true tree
	$raxmlHPC -f r -z $tFile -m PROTGAMMAWAG -n C1
	cp "RAxML_RF-Distances.C1" "../"$f.RF
cd ..
done
